<head>
  <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet">
</head>

<section id="builder" class="builder-section" style="padding: 60px 20px; background: #f9fbff; font-family: 'Roboto', sans-serif;">
  <div class="builder-steps">
    {% for block in section.blocks %}
      <div class="builder-step" id="step-{{ forloop.index0 }}" style="margin-bottom: 60px;">
        <h2 style="text-align: center; font-family: 'Roboto', sans-serif;">{{ block.settings.step_title }}</h2>
        <p style="text-align: center; margin-bottom: 30px; font-family: 'Roboto', sans-serif;">{{ block.settings.step_subtitle }}</p>

        <div class="product-list" data-step-index="{{ forloop.index0 }}" style="display: flex; justify-content: center; gap: 24px; flex-wrap: wrap;">
          {% for product in block.settings.products %}
            {% assign product_obj = all_products[product.handle] %}
            {% if product_obj %}
              <div class="builder-product" data-product-id="{{ product_obj.variants.first.id }}" data-step="{{ forloop.index0 }}" style="width: 250px; background: white; border-radius: 12px; overflow: hidden; box-shadow: 0 2px 8px rgba(0,0,0,0.1); text-align: center; padding-bottom: 20px;">
                <img src="{{ product_obj.featured_image | image_url: width: 300 }}" alt="{{ product_obj.title }}" style="width: 100%; height: 250px; object-fit: contain; background: #fff;">
                <div style="padding: 10px;">
                  <p style="font-weight: bold; font-family: 'Roboto', sans-serif;">{{ product_obj.title }}</p>
                  <p style="color: gray; font-family: 'Roboto', sans-serif;">{{ product_obj.price | money }}</p>
                  <button class="select-product-btn" style="margin-top: 10px; padding: 8px 16px; background: #2a44ff; color: white; border: none; border-radius: 6px; cursor: pointer; font-family: 'Roboto', sans-serif;">Select</button>
                </div>
              </div>
            {% endif %}
          {% endfor %}
        </div>
      </div>
    {% endfor %}
  </div>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const selectedProductsByStep = {};
    const checkoutBtn = document.getElementById("checkout-button");

    document.querySelectorAll(".builder-step").forEach(stepEl => {
      const stepIndex = stepEl.id.split("-")[1];
      const productCards = stepEl.querySelectorAll(".builder-product");

      productCards.forEach(card => {
        const selectBtn = card.querySelector(".select-product-btn");

        selectBtn.addEventListener("click", () => {
          if (selectedProductsByStep[stepIndex]) return;

          const productId = card.dataset.productId;
          selectedProductsByStep[stepIndex] = productId;

          productCards.forEach(c => {
            const btn = c.querySelector(".select-product-btn");
            btn.disabled = true;
            btn.style.opacity = 0.5;
            btn.innerText = (c === card) ? "Selected" : "Select";
          });

          const nextStepEl = document.getElementById(`step-${parseInt(stepIndex) + 1}`);
          if (nextStepEl) {
            nextStepEl.scrollIntoView({ behavior: 'smooth' });
          }

          const totalSteps = document.querySelectorAll(".builder-step").length;
          if (Object.keys(selectedProductsByStep).length === totalSteps) {
            checkoutBtn.disabled = false;
            checkoutBtn.style.cursor = "pointer";
            checkoutBtn.style.background = "#2a44ff";
          }
        });
      });
    });

    checkoutBtn.addEventListener("click", () => {
      const items = Object.values(selectedProductsByStep).map(id => ({
        id,
        quantity: 1
      }));

      fetch('/cart/clear.js', { method: 'POST' })
        .then(() =>
          fetch('/cart/add.js', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
              'Accept': 'application/json'
            },
            body: JSON.stringify({ items })
          })
        )
        .then(() => {
          window.location.href = '/checkout';
        })
        .catch(error => {
          console.error("Checkout error:", error);
          alert("Something went wrong!");
        });
    });
  });
</script>

{% schema %}
{
  "name": "Builder Section",
  "settings": [],
  "blocks": [
    {
      "type": "step",
      "name": "Step",
      "settings": [
        {
          "type": "text",
          "id": "step_title",
          "label": "Step title",
          "default": "STEP 1"
        },
        {
          "type": "text",
          "id": "step_subtitle",
          "label": "Step subtitle",
          "default": "Select product"
        },
        {
          "type": "product_list",
          "id": "products",
          "label": "Select products",
          "limit": 3
        }
      ]
    }
  ],
  "max_blocks": 3,
  "presets": [
    {
      "name": "Builder Section",
      "category": "Custom"
    }
  ]
}
{% endschema %}
